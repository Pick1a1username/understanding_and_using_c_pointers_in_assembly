     1                                  extern printf
     2                                  extern strcmp
     3                                  extern malloc
     4                                  extern strcpy
     5                                  
     6                                  struc _employee
     7 00000000 <res 20h>                   _e_name:  resb 32
     8 00000020 ??                          _e_age:   resb 1
     9                                  endstruc
    10                                  
    11                                  section .data
    12 00000000 0000000000000000            samuel       dq  0
    13 00000008 53616D75656C00              samuel_name  db  "Samuel", 0
    14 0000000F 20                          samuel_age   db  32
    15 00000010 0000000000000000            sally        dq  0
    16 00000018 53616C6C7900                sally_name   db  "Sally", 0
    17 0000001E 1C                          sally_age    db  28
    18 0000001F 0000000000000000            susan        dq  0
    19 00000027 537573616E00                susan_name   db  "Susan", 0
    20 0000002D 2D                          susan_age    db  45
    21                                  ;     susan:
    22                                  ;         istruc _employee
    23                                  ;             at _e_name, db  "Susan", 0
    24                                  ;             at _e_age,  db  45
    25                                  ;         iend
    26 0000002E 25730A00                    fmt_str  db  "%s", 10, 0
    27 00000032 25640A00                    fmt_int  db  "%d", 10, 0
    28                                  
    29                                  section .text
    30                                  
    31                                  global main
    32                                  main:
    33 00000000 55                          push rbp
    34 00000001 4889E5                      mov  rbp, rsp
    35                                  
    36 00000004 4831FF                      xor  rdi, rdi      ; rdi must be initialized!
    37 00000007 BF00000000                  mov  rdi, _e_name
    38 0000000C 4883C720                    add  rdi, _e_age
    39 00000010 E8(00000000)                call malloc
    40 00000015 48890425[00000000]          mov  [samuel], rax
    41 0000001D 4831FF                      xor  rdi, rdi
    42 00000020 488B3C25[00000000]          mov  rdi, [samuel]
    43 00000028 4883C700                    add  rdi, _e_name
    44 0000002C 488D3425[08000000]          lea  rsi, [samuel_name]
    45 00000034 E8(00000000)                call strcpy
    46 00000039 4883C720                    add  rdi, _e_age
    47 0000003D 488B3425[0F000000]          mov  rsi, [samuel_age]
    48 00000045 488937                      mov  [rdi], rsi
    49 00000048 4831FF                      xor  rdi, rdi
    50 0000004B 4831F6                      xor  rsi, rsi
    51                                  
    52                                  ;     mov  rdi, _e_name
    53                                  ;     add  rdi, _e_age
    54                                  ;     call malloc
    55                                  ;     mov  [sally], rax
    56                                  ;     xor  rdi, rdi
    57                                  ;     lea  rdi, [sally+_e_name]
    58                                  ;     lea  rsi, [sally_name]
    59                                  ;     call strcpy
    60                                  ; 
    61                                  ;     mov  rdi, _e_name
    62                                  ;     add  rdi, _e_age
    63                                  ;     call malloc
    64                                  ;     mov  [susan], rax
    65                                  ;     xor  rdi, rdi
    66                                  ;     lea  rdi, [susan+_e_name]
    67                                  ;     lea  rsi, [susan_name]
    68                                  ;     call strcpy
    69                                  
    70 0000004E 48BF-                       mov  rdi, fmt_str
    70 00000050 [2E00000000000000] 
    71 00000058 488B3425[00000000]          mov  rsi, [samuel]
    72 00000060 4883C600                    add  rsi, _e_name
    73 00000064 E8(00000000)                call printf
    74 00000069 48BF-                       mov  rdi, fmt_int
    74 0000006B [3200000000000000] 
    75 00000073 488B3425[00000000]          mov  rsi, [samuel]
    76 0000007B 4883C600                    add  rsi, _e_name
    77 0000007F 4883C620                    add  rsi, _e_age
    78 00000083 488B36                      mov  rsi, [rsi]
    79 00000086 E8(00000000)                call printf
    80                                  
    81                                  ;     lea  rdi, [sally]
    82                                  ;     lea  rsi, [samuel]
    83                                  ;     call compare_employee
    84                                  ; 
    85                                  ;     mov  rdi, fmt_int
    86                                  ;     mov  rsi, rax
    87                                  ;     call printf
    88                                  
    89 0000008B C9                          leave
    90 0000008C C3                          ret
    91                                  
    92                                  global compare_employee
    93                                  compare_employee:
    94                                      section .text 
    95 0000008D 55                              push rbp
    96 0000008E 4889E5                          mov  rbp, rsp
    97                                  
    98 00000091 488D3F                          lea rdi, [rdi+_e_name]
    99 00000094 488D36                          lea rsi, [rsi+_e_name]
   100 00000097 E8(00000000)                    call strcmp
   101                                  
   102 0000009C C9                              leave
   103 0000009D C3                              ret
   104                                    
